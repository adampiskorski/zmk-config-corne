/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/* Mouse customization */
#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500 // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20   // default: 10

#include <dt-bindings/zmk/pointing.h>

/
{
    combos
    {
        compatible = "zmk,combos";

        utility_layer
        {
            bindings = <&mo 3>;
            key - positions = <41 40>;
        };
    };

    keymap
    {
        compatible = "zmk,keymap";

        default_layer
        {
            bindings = <
                &kp TAB & kp Q & kp W & kp E & kp R & kp T & kp Y & kp U & kp I & kp O & kp P & kp BSPC & kp LEFT_SHIFT & kp A & kp S & kp D & kp F & kp G & kp H & kp J & kp K & kp L & kp SEMI & kp SQT & kp LCTRL & kp Z & kp X & kp C & kp V & kp B & kp N & kp M & kp COMMA & kp DOT & kp FSLH & kp RIGHT_SHIFT & kp LEFT_ALT & kp LEFT_WIN & kp SPACE & kp RET & mo 1 & mo 2>;
        };

        lower_layer
        {
            bindings = <
                &kp TILDE & kp EXCL & kp AT & kp HASH & kp DLLR & kp PRCNT & kp CARET & kp AMPS & kp ASTRK & kp SCROLLLOCK & kp PLUS & kp BSPC & kp LEFT_SHIFT & kp GRAVE & kp LEFT_PARENTHESIS & kp UNDERSCORE & kp RIGHT_PARENTHESIS & kp DELETE & kp LEFT & kp DOWN_ARROW & kp UP_ARROW & kp RIGHT_ARROW & kp MINUS & kp ESCAPE & kp LEFT_CONTROL & kp BACKSLASH & kp LEFT_BRACKET & kp PIPE & kp RIGHT_BRACKET & kp INSERT & kp HOME & kp END & kp PAGE_UP & kp PAGE_DOWN & kp EQUAL & kp RIGHT_SHIFT & trans & trans & trans & trans & trans & trans>;
        };

        raise_layer
        {
            bindings = <
                &kp CAPSLOCK & kp F1 & kp F2 & kp F3 & kp F4 & kp F5 & none & kp NUMBER_7 & kp NUMBER_8 & kp NUMBER_9 & kp KP_PLUS & kp BSPC & kp LEFT_SHIFT & kp F6 & kp LEFT_BRACE & kp F7 & kp RIGHT_BRACE & kp F8 & kp NUMBER_0 & kp NUMBER_4 & kp NUMBER_5 & kp NUMBER_6 & kp KP_MINUS & kp ESCAPE & kp LEFT_CONTROL & kp F9 & kp F10 & kp F11 & kp F12 & kp LC(A) & kp NUMBER_0 & kp NUMBER_1 & kp NUMBER_2 & kp NUMBER_3 & kp EQUAL & kp RIGHT_SHIFT & trans & trans & trans & trans & trans & trans>;
        };

        utility_layer
        {
            bindings = <
                &none & mmv MOVE_X(-600) & mmv MOVE_Y(-600) & mmv MOVE_Y(600) & mmv MOVE_X(600) & mkp RCLK & out OUT_USB & out OUT_BLE & kp C_PREVIOUS & kp C_NEXT & kp C_MUTE & kp C_VOLUME_UP & none & mmv MOVE_LEFT & mmv MOVE_UP & mmv MOVE_DOWN & mmv MOVE_RIGHT & mkp LCLK & kp C_BRIGHTNESS_DEC & kp C_BRIGHTNESS_INC & kp C_PLAY_PAUSE & kp C_REWIND & kp C_FAST_FORWARD & kp C_VOLUME_DOWN & none & msc SCRL_LEFT & msc SCRL_UP & msc SCRL_DOWN & msc SCRL_RIGHT & mkp MCLK & bt BT_CLR & bt BT_SEL 4 & bt BT_SEL 3 & bt BT_SEL 2 & bt BT_SEL 1 & bt BT_SEL 0 & trans & trans & trans & trans & trans & trans>;
        };
    };
};
